<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="0" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="2952" started-at="2016-12-07T21:40:16Z" finished-at="2016-12-07T21:40:19Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="2952" started-at="2016-12-07T21:40:16Z" finished-at="2016-12-07T21:40:19Z">
      <class name="BestbuyTesting.NewTest">
        <test-method status="FAIL" signature="setUp()[pri:0, instance:BestbuyTesting.NewTest@51565ec2]" name="setUp" is-config="true" duration-ms="0" started-at="2016-12-07T16:40:16Z" finished-at="2016-12-07T16:40:16Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell
	at org.apache.poi.hssf.usermodel.HSSFCell.typeMismatch(HSSFCell.java:655)
	at org.apache.poi.hssf.usermodel.HSSFCell.getRichStringCellValue(HSSFCell.java:732)
	at org.apache.poi.hssf.usermodel.HSSFCell.getStringCellValue(HSSFCell.java:715)
	at BestbuyTesting.NewTest.setUp(NewTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:143)
	at org.testng.TestRunner.beforeRun(TestRunner.java:631)
	at org.testng.TestRunner.run(TestRunner.java:599)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:BestbuyTesting.NewTest@51565ec2]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-12-07T16:40:19Z" finished-at="2016-12-07T16:40:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="testWebdriver()[pri:0, instance:BestbuyTesting.NewTest@51565ec2]" name="testWebdriver" is-config="true" duration-ms="0" started-at="2016-12-07T16:40:19Z" finished-at="2016-12-07T16:40:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWebdriver -->
      </class> <!-- BestbuyTesting.NewTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
